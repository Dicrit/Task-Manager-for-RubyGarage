1. get all statuses, not repeating, alphabetically ordered

SELECT DISTINCT status FROM tasks ORDER BY status;


2. get the count of all tasks in each project, order by tasks count descending

SELECT name, (SELECT COUNT(*) FROM tasks WHERE project_id = projects.id) c
FROM projects ORDER BY c DESC


3. get the count of all tasks in each project, order by projects names

SELECT name, (SELECT COUNT(*) FROM tasks WHERE project_id = projects.id)
FROM projects ORDER BY name


4. get the tasks for all projects having the name beginning with “N” letter

SELECT * FROM tasks WHERE name LIKE 'N%';


5. get the list of all projects containing the ‘a’ letter in the middle of the name, and
show the tasks count near each project. Mention that there can exist projects without
tasks and tasks with project_id=NULL

SELECT t1, (SELECT COUNT(*) FROM tasks WHERE project_id = t1.id)
FROM projects AS t1 WHERE name LIKE '%a%'


6. get the list of tasks with duplicate names. Order alphabetically

SELECT * FROM tasks
INNER JOIN
(SELECT tasks.name FROM tasks GROUP BY tasks.name HAVING COUNT(*) > 1 ) temp
ON tasks.name = temp.name ORDER BY tasks.name


7. get the list of tasks having several exact matches of both name and status, from
the project ‘Garage’. Order by matches count

SELECT * FROM tasks
INNER JOIN
(SELECT tasks.name, tasks.status, COUNT(*) c FROM tasks GROUP BY tasks.name, tasks.status HAVING COUNT(id) > 1) temp
ON tasks.name = temp.name AND tasks.status = temp.status ORDER BY c DESC


8. get the list of project names having more than 10 tasks in status ‘completed’. Order
by project_id

SELECT name FROM projects WHERE 
(SELECT COUNT(*) FROM tasks 
WHERE tasks.project_id = projects.id AND tasks.status = 'completed') > 10 ORDER BY id

